// source: active-sessions.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.nucleus.provisioning.ActiveSession', null, global);
goog.exportSymbol('proto.nucleus.provisioning.GetActiveSessionsRequest', null, global);
goog.exportSymbol('proto.nucleus.provisioning.GetActiveSessionsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nucleus.provisioning.GetActiveSessionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nucleus.provisioning.GetActiveSessionsRequest.repeatedFields_, null);
};
goog.inherits(proto.nucleus.provisioning.GetActiveSessionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nucleus.provisioning.GetActiveSessionsRequest.displayName = 'proto.nucleus.provisioning.GetActiveSessionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nucleus.provisioning.GetActiveSessionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nucleus.provisioning.GetActiveSessionsResponse.repeatedFields_, null);
};
goog.inherits(proto.nucleus.provisioning.GetActiveSessionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nucleus.provisioning.GetActiveSessionsResponse.displayName = 'proto.nucleus.provisioning.GetActiveSessionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nucleus.provisioning.ActiveSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nucleus.provisioning.ActiveSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nucleus.provisioning.ActiveSession.displayName = 'proto.nucleus.provisioning.ActiveSession';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nucleus.provisioning.GetActiveSessionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nucleus.provisioning.GetActiveSessionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && common_pb.AuthContext.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    search: jspb.Message.getFieldWithDefault(msg, 4, ""),
    nasDevicesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nucleus.provisioning.GetActiveSessionsRequest;
  return proto.nucleus.provisioning.GetActiveSessionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nucleus.provisioning.GetActiveSessionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.AuthContext;
      reader.readMessage(value,common_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addNasDevices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nucleus.provisioning.GetActiveSessionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nucleus.provisioning.GetActiveSessionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNasDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional common.AuthContext auth_context = 1;
 * @return {?proto.common.AuthContext}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.common.AuthContext} */ (
    jspb.Message.getWrapperField(this, common_pb.AuthContext, 1));
};


/**
 * @param {?proto.common.AuthContext|undefined} value
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest} returns this
*/
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.setAuthContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest} returns this
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.clearAuthContext = function() {
  return this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest} returns this
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest} returns this
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string search = 4;
 * @return {string}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest} returns this
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.setSearch = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest} returns this
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.clearSearch = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.hasSearch = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string nas_devices = 5;
 * @return {!Array<string>}
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.getNasDevicesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest} returns this
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.setNasDevicesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest} returns this
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.addNasDevices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nucleus.provisioning.GetActiveSessionsRequest} returns this
 */
proto.nucleus.provisioning.GetActiveSessionsRequest.prototype.clearNasDevicesList = function() {
  return this.setNasDevicesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nucleus.provisioning.GetActiveSessionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nucleus.provisioning.GetActiveSessionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.nucleus.provisioning.ActiveSession.toObject, includeInstance),
    meta: (f = msg.getMeta()) && common_pb.PaginationMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nucleus.provisioning.GetActiveSessionsResponse}
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nucleus.provisioning.GetActiveSessionsResponse;
  return proto.nucleus.provisioning.GetActiveSessionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nucleus.provisioning.GetActiveSessionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nucleus.provisioning.GetActiveSessionsResponse}
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nucleus.provisioning.ActiveSession;
      reader.readMessage(value,proto.nucleus.provisioning.ActiveSession.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = new common_pb.PaginationMeta;
      reader.readMessage(value,common_pb.PaginationMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nucleus.provisioning.GetActiveSessionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nucleus.provisioning.GetActiveSessionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nucleus.provisioning.ActiveSession.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.PaginationMeta.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ActiveSession data = 1;
 * @return {!Array<!proto.nucleus.provisioning.ActiveSession>}
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.nucleus.provisioning.ActiveSession>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nucleus.provisioning.ActiveSession, 1));
};


/**
 * @param {!Array<!proto.nucleus.provisioning.ActiveSession>} value
 * @return {!proto.nucleus.provisioning.GetActiveSessionsResponse} returns this
*/
proto.nucleus.provisioning.GetActiveSessionsResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nucleus.provisioning.ActiveSession=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nucleus.provisioning.ActiveSession}
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nucleus.provisioning.ActiveSession, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nucleus.provisioning.GetActiveSessionsResponse} returns this
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional common.PaginationMeta meta = 2;
 * @return {?proto.common.PaginationMeta}
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.prototype.getMeta = function() {
  return /** @type{?proto.common.PaginationMeta} */ (
    jspb.Message.getWrapperField(this, common_pb.PaginationMeta, 2));
};


/**
 * @param {?proto.common.PaginationMeta|undefined} value
 * @return {!proto.nucleus.provisioning.GetActiveSessionsResponse} returns this
*/
proto.nucleus.provisioning.GetActiveSessionsResponse.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nucleus.provisioning.GetActiveSessionsResponse} returns this
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nucleus.provisioning.GetActiveSessionsResponse.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nucleus.provisioning.ActiveSession.prototype.toObject = function(opt_includeInstance) {
  return proto.nucleus.provisioning.ActiveSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nucleus.provisioning.ActiveSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nucleus.provisioning.ActiveSession.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nasipaddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    acctstarttime: (f = msg.getAcctstarttime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    acctsessiontime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    acctinputoctets: jspb.Message.getFieldWithDefault(msg, 6, 0),
    acctoutputoctets: jspb.Message.getFieldWithDefault(msg, 7, 0),
    framedipaddress: jspb.Message.getFieldWithDefault(msg, 8, ""),
    callingstationid: jspb.Message.getFieldWithDefault(msg, 9, ""),
    acctstatustype: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nucleus.provisioning.ActiveSession}
 */
proto.nucleus.provisioning.ActiveSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nucleus.provisioning.ActiveSession;
  return proto.nucleus.provisioning.ActiveSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nucleus.provisioning.ActiveSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nucleus.provisioning.ActiveSession}
 */
proto.nucleus.provisioning.ActiveSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNasipaddress(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAcctstarttime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAcctsessiontime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAcctinputoctets(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAcctoutputoctets(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFramedipaddress(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallingstationid(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcctstatustype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nucleus.provisioning.ActiveSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nucleus.provisioning.ActiveSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nucleus.provisioning.ActiveSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nucleus.provisioning.ActiveSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNasipaddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAcctstarttime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAcctsessiontime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAcctinputoctets();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getAcctoutputoctets();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAcctstatustype();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nucleus.provisioning.ActiveSession.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.nucleus.provisioning.ActiveSession.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nucleus.provisioning.ActiveSession.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string nasipaddress = 3;
 * @return {string}
 */
proto.nucleus.provisioning.ActiveSession.prototype.getNasipaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.setNasipaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp acctstarttime = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nucleus.provisioning.ActiveSession.prototype.getAcctstarttime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
*/
proto.nucleus.provisioning.ActiveSession.prototype.setAcctstarttime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.clearAcctstarttime = function() {
  return this.setAcctstarttime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nucleus.provisioning.ActiveSession.prototype.hasAcctstarttime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 acctsessiontime = 5;
 * @return {number}
 */
proto.nucleus.provisioning.ActiveSession.prototype.getAcctsessiontime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.setAcctsessiontime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 acctinputoctets = 6;
 * @return {number}
 */
proto.nucleus.provisioning.ActiveSession.prototype.getAcctinputoctets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.setAcctinputoctets = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 acctoutputoctets = 7;
 * @return {number}
 */
proto.nucleus.provisioning.ActiveSession.prototype.getAcctoutputoctets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.setAcctoutputoctets = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string framedipaddress = 8;
 * @return {string}
 */
proto.nucleus.provisioning.ActiveSession.prototype.getFramedipaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.setFramedipaddress = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.clearFramedipaddress = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nucleus.provisioning.ActiveSession.prototype.hasFramedipaddress = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string callingstationid = 9;
 * @return {string}
 */
proto.nucleus.provisioning.ActiveSession.prototype.getCallingstationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.setCallingstationid = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.clearCallingstationid = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nucleus.provisioning.ActiveSession.prototype.hasCallingstationid = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string acctstatustype = 10;
 * @return {string}
 */
proto.nucleus.provisioning.ActiveSession.prototype.getAcctstatustype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.nucleus.provisioning.ActiveSession} returns this
 */
proto.nucleus.provisioning.ActiveSession.prototype.setAcctstatustype = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


goog.object.extend(exports, proto.nucleus.provisioning);

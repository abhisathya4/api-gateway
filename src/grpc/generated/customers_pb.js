// source: customers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var radius_pb = require('./radius_pb.js');
goog.object.extend(proto, radius_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.customers.AuthDeactivateCustomerRequest', null, global);
goog.exportSymbol('proto.customers.AuthDeactivateCustomerResponse', null, global);
goog.exportSymbol('proto.customers.AuthRenewOrActivateCustomerRequest', null, global);
goog.exportSymbol('proto.customers.AuthRenewOrActivateCustomerResponse', null, global);
goog.exportSymbol('proto.customers.CreateCustomerRequest', null, global);
goog.exportSymbol('proto.customers.CreateCustomerRequest.CustomerParams', null, global);
goog.exportSymbol('proto.customers.CreateCustomerResponse', null, global);
goog.exportSymbol('proto.customers.Customer', null, global);
goog.exportSymbol('proto.customers.CustomerWithPlanBusinessAndPlanbookInfo', null, global);
goog.exportSymbol('proto.customers.CustomerWithPlanInfo', null, global);
goog.exportSymbol('proto.customers.GetCustomerRequest', null, global);
goog.exportSymbol('proto.customers.GetCustomerResponse', null, global);
goog.exportSymbol('proto.customers.GetCustomersRequest', null, global);
goog.exportSymbol('proto.customers.GetCustomersResponse', null, global);
goog.exportSymbol('proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest', null, global);
goog.exportSymbol('proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse', null, global);
goog.exportSymbol('proto.customers.SysDeactivateCustomerRequest', null, global);
goog.exportSymbol('proto.customers.SysDeactivateCustomerResponse', null, global);
goog.exportSymbol('proto.customers.SysRenewOrActivateCustomerRequest', null, global);
goog.exportSymbol('proto.customers.SysRenewOrActivateCustomerResponse', null, global);
goog.exportSymbol('proto.customers.UpdateCustomerDetailsRequest', null, global);
goog.exportSymbol('proto.customers.UpdateCustomerDetailsRequest.CustomerParams', null, global);
goog.exportSymbol('proto.customers.UpdateCustomerDetailsResponse', null, global);
goog.exportSymbol('proto.customers.UpdateCustomerPlanRequest', null, global);
goog.exportSymbol('proto.customers.UpdateCustomerPlanRequest.CustomerParams', null, global);
goog.exportSymbol('proto.customers.UpdateCustomerPlanResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.CreateCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.CreateCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.CreateCustomerRequest.displayName = 'proto.customers.CreateCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.CreateCustomerRequest.CustomerParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.CreateCustomerRequest.CustomerParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.CreateCustomerRequest.CustomerParams.displayName = 'proto.customers.CreateCustomerRequest.CustomerParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.Customer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.Customer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.Customer.displayName = 'proto.customers.Customer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.GetCustomersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.GetCustomersRequest.repeatedFields_, null);
};
goog.inherits(proto.customers.GetCustomersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.GetCustomersRequest.displayName = 'proto.customers.GetCustomersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.GetCustomersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.GetCustomersResponse.repeatedFields_, null);
};
goog.inherits(proto.customers.GetCustomersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.GetCustomersResponse.displayName = 'proto.customers.GetCustomersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.CustomerWithPlanInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.CustomerWithPlanInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.CustomerWithPlanInfo.displayName = 'proto.customers.CustomerWithPlanInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.CustomerWithPlanBusinessAndPlanbookInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.displayName = 'proto.customers.CustomerWithPlanBusinessAndPlanbookInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.repeatedFields_, null);
};
goog.inherits(proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.displayName = 'proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.displayName = 'proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.CreateCustomerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.CreateCustomerResponse.repeatedFields_, null);
};
goog.inherits(proto.customers.CreateCustomerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.CreateCustomerResponse.displayName = 'proto.customers.CreateCustomerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.UpdateCustomerDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.UpdateCustomerDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.UpdateCustomerDetailsRequest.displayName = 'proto.customers.UpdateCustomerDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.UpdateCustomerDetailsRequest.CustomerParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.UpdateCustomerDetailsRequest.CustomerParams.displayName = 'proto.customers.UpdateCustomerDetailsRequest.CustomerParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.UpdateCustomerDetailsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.UpdateCustomerDetailsResponse.repeatedFields_, null);
};
goog.inherits(proto.customers.UpdateCustomerDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.UpdateCustomerDetailsResponse.displayName = 'proto.customers.UpdateCustomerDetailsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.UpdateCustomerPlanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.UpdateCustomerPlanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.UpdateCustomerPlanRequest.displayName = 'proto.customers.UpdateCustomerPlanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.UpdateCustomerPlanRequest.CustomerParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.UpdateCustomerPlanRequest.CustomerParams.displayName = 'proto.customers.UpdateCustomerPlanRequest.CustomerParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.UpdateCustomerPlanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.UpdateCustomerPlanResponse.repeatedFields_, null);
};
goog.inherits(proto.customers.UpdateCustomerPlanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.UpdateCustomerPlanResponse.displayName = 'proto.customers.UpdateCustomerPlanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.GetCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.GetCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.GetCustomerRequest.displayName = 'proto.customers.GetCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.GetCustomerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.GetCustomerResponse.repeatedFields_, null);
};
goog.inherits(proto.customers.GetCustomerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.GetCustomerResponse.displayName = 'proto.customers.GetCustomerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.AuthRenewOrActivateCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.AuthRenewOrActivateCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.AuthRenewOrActivateCustomerRequest.displayName = 'proto.customers.AuthRenewOrActivateCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.AuthRenewOrActivateCustomerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.AuthRenewOrActivateCustomerResponse.repeatedFields_, null);
};
goog.inherits(proto.customers.AuthRenewOrActivateCustomerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.AuthRenewOrActivateCustomerResponse.displayName = 'proto.customers.AuthRenewOrActivateCustomerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.SysRenewOrActivateCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.SysRenewOrActivateCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.SysRenewOrActivateCustomerRequest.displayName = 'proto.customers.SysRenewOrActivateCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.SysRenewOrActivateCustomerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.SysRenewOrActivateCustomerResponse.repeatedFields_, null);
};
goog.inherits(proto.customers.SysRenewOrActivateCustomerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.SysRenewOrActivateCustomerResponse.displayName = 'proto.customers.SysRenewOrActivateCustomerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.AuthDeactivateCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.AuthDeactivateCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.AuthDeactivateCustomerRequest.displayName = 'proto.customers.AuthDeactivateCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.AuthDeactivateCustomerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.AuthDeactivateCustomerResponse.repeatedFields_, null);
};
goog.inherits(proto.customers.AuthDeactivateCustomerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.AuthDeactivateCustomerResponse.displayName = 'proto.customers.AuthDeactivateCustomerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.SysDeactivateCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customers.SysDeactivateCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.SysDeactivateCustomerRequest.displayName = 'proto.customers.SysDeactivateCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customers.SysDeactivateCustomerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customers.SysDeactivateCustomerResponse.repeatedFields_, null);
};
goog.inherits(proto.customers.SysDeactivateCustomerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customers.SysDeactivateCustomerResponse.displayName = 'proto.customers.SysDeactivateCustomerResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.CreateCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.CreateCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.CreateCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.CreateCustomerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && common_pb.AuthContext.toObject(includeInstance, f),
    customerParams: (f = msg.getCustomerParams()) && proto.customers.CreateCustomerRequest.CustomerParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.CreateCustomerRequest}
 */
proto.customers.CreateCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.CreateCustomerRequest;
  return proto.customers.CreateCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.CreateCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.CreateCustomerRequest}
 */
proto.customers.CreateCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.AuthContext;
      reader.readMessage(value,common_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = new proto.customers.CreateCustomerRequest.CustomerParams;
      reader.readMessage(value,proto.customers.CreateCustomerRequest.CustomerParams.deserializeBinaryFromReader);
      msg.setCustomerParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.CreateCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.CreateCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.CreateCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.CreateCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getCustomerParams();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.customers.CreateCustomerRequest.CustomerParams.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.CreateCustomerRequest.CustomerParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.CreateCustomerRequest.CustomerParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.CreateCustomerRequest.CustomerParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    username: jspb.Message.getFieldWithDefault(msg, 4, ""),
    subscriptionPlan: jspb.Message.getFieldWithDefault(msg, 5, ""),
    postFupPlan: jspb.Message.getFieldWithDefault(msg, 6, ""),
    radPassword: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.CreateCustomerRequest.CustomerParams}
 */
proto.customers.CreateCustomerRequest.CustomerParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.CreateCustomerRequest.CustomerParams;
  return proto.customers.CreateCustomerRequest.CustomerParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.CreateCustomerRequest.CustomerParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.CreateCustomerRequest.CustomerParams}
 */
proto.customers.CreateCustomerRequest.CustomerParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionPlan(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostFupPlan(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRadPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.CreateCustomerRequest.CustomerParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.CreateCustomerRequest.CustomerParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.CreateCustomerRequest.CustomerParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSubscriptionPlan();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRadPassword();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CreateCustomerRequest.CustomerParams} returns this
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CreateCustomerRequest.CustomerParams} returns this
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CreateCustomerRequest.CustomerParams} returns this
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CreateCustomerRequest.CustomerParams} returns this
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string subscription_plan = 5;
 * @return {string}
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.getSubscriptionPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CreateCustomerRequest.CustomerParams} returns this
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.setSubscriptionPlan = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string post_fup_plan = 6;
 * @return {string}
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.getPostFupPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CreateCustomerRequest.CustomerParams} returns this
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.setPostFupPlan = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CreateCustomerRequest.CustomerParams} returns this
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.clearPostFupPlan = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.hasPostFupPlan = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string rad_password = 7;
 * @return {string}
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.getRadPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CreateCustomerRequest.CustomerParams} returns this
 */
proto.customers.CreateCustomerRequest.CustomerParams.prototype.setRadPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional common.AuthContext auth_context = 1;
 * @return {?proto.common.AuthContext}
 */
proto.customers.CreateCustomerRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.common.AuthContext} */ (
    jspb.Message.getWrapperField(this, common_pb.AuthContext, 1));
};


/**
 * @param {?proto.common.AuthContext|undefined} value
 * @return {!proto.customers.CreateCustomerRequest} returns this
*/
proto.customers.CreateCustomerRequest.prototype.setAuthContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.CreateCustomerRequest} returns this
 */
proto.customers.CreateCustomerRequest.prototype.clearAuthContext = function() {
  return this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CreateCustomerRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CustomerParams customer_params = 2;
 * @return {?proto.customers.CreateCustomerRequest.CustomerParams}
 */
proto.customers.CreateCustomerRequest.prototype.getCustomerParams = function() {
  return /** @type{?proto.customers.CreateCustomerRequest.CustomerParams} */ (
    jspb.Message.getWrapperField(this, proto.customers.CreateCustomerRequest.CustomerParams, 2));
};


/**
 * @param {?proto.customers.CreateCustomerRequest.CustomerParams|undefined} value
 * @return {!proto.customers.CreateCustomerRequest} returns this
*/
proto.customers.CreateCustomerRequest.prototype.setCustomerParams = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.CreateCustomerRequest} returns this
 */
proto.customers.CreateCustomerRequest.prototype.clearCustomerParams = function() {
  return this.setCustomerParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CreateCustomerRequest.prototype.hasCustomerParams = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.Customer.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.Customer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.Customer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.Customer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    username: jspb.Message.getFieldWithDefault(msg, 4, ""),
    subscriptionPlan: jspb.Message.getFieldWithDefault(msg, 5, ""),
    postFupPlan: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 7, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    lastRenewDate: jspb.Message.getFieldWithDefault(msg, 9, ""),
    dataUsage: jspb.Message.getFieldWithDefault(msg, 10, 0),
    lastActive: (f = msg.getLastActive()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    tenantId: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.Customer}
 */
proto.customers.Customer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.Customer;
  return proto.customers.Customer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.Customer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.Customer}
 */
proto.customers.Customer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionPlan(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostFupPlan(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastRenewDate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDataUsage(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastActive(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.Customer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.Customer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.Customer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.Customer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDataUsage();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getLastActive();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.customers.Customer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.customers.Customer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.customers.Customer.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.customers.Customer.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string subscription_plan = 5;
 * @return {string}
 */
proto.customers.Customer.prototype.getSubscriptionPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setSubscriptionPlan = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.clearSubscriptionPlan = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.Customer.prototype.hasSubscriptionPlan = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string post_fup_plan = 6;
 * @return {string}
 */
proto.customers.Customer.prototype.getPostFupPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setPostFupPlan = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.clearPostFupPlan = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.Customer.prototype.hasPostFupPlan = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string created_at = 7;
 * @return {string}
 */
proto.customers.Customer.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool active = 8;
 * @return {boolean}
 */
proto.customers.Customer.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string last_renew_date = 9;
 * @return {string}
 */
proto.customers.Customer.prototype.getLastRenewDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setLastRenewDate = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.clearLastRenewDate = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.Customer.prototype.hasLastRenewDate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 data_usage = 10;
 * @return {number}
 */
proto.customers.Customer.prototype.getDataUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setDataUsage = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp last_active = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.customers.Customer.prototype.getLastActive = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.customers.Customer} returns this
*/
proto.customers.Customer.prototype.setLastActive = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.clearLastActive = function() {
  return this.setLastActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.Customer.prototype.hasLastActive = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string tenant_id = 12;
 * @return {string}
 */
proto.customers.Customer.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.Customer} returns this
 */
proto.customers.Customer.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.GetCustomersRequest.repeatedFields_ = [5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.GetCustomersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.GetCustomersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.GetCustomersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && common_pb.AuthContext.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    search: jspb.Message.getFieldWithDefault(msg, 4, ""),
    planIdsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    businessIdsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    statusList: (f = jspb.Message.getRepeatedBooleanField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.GetCustomersRequest}
 */
proto.customers.GetCustomersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.GetCustomersRequest;
  return proto.customers.GetCustomersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.GetCustomersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.GetCustomersRequest}
 */
proto.customers.GetCustomersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.AuthContext;
      reader.readMessage(value,common_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addPlanIds(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addBusinessIds(value);
      break;
    case 7:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatus(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.GetCustomersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.GetCustomersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.GetCustomersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlanIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getBusinessIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writePackedBool(
      7,
      f
    );
  }
};


/**
 * optional common.AuthContext auth_context = 1;
 * @return {?proto.common.AuthContext}
 */
proto.customers.GetCustomersRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.common.AuthContext} */ (
    jspb.Message.getWrapperField(this, common_pb.AuthContext, 1));
};


/**
 * @param {?proto.common.AuthContext|undefined} value
 * @return {!proto.customers.GetCustomersRequest} returns this
*/
proto.customers.GetCustomersRequest.prototype.setAuthContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.clearAuthContext = function() {
  return this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.GetCustomersRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.customers.GetCustomersRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.customers.GetCustomersRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string search = 4;
 * @return {string}
 */
proto.customers.GetCustomersRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.setSearch = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.clearSearch = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.GetCustomersRequest.prototype.hasSearch = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string plan_ids = 5;
 * @return {!Array<string>}
 */
proto.customers.GetCustomersRequest.prototype.getPlanIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.setPlanIdsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.addPlanIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.clearPlanIdsList = function() {
  return this.setPlanIdsList([]);
};


/**
 * repeated string business_ids = 6;
 * @return {!Array<string>}
 */
proto.customers.GetCustomersRequest.prototype.getBusinessIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.setBusinessIdsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.addBusinessIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.clearBusinessIdsList = function() {
  return this.setBusinessIdsList([]);
};


/**
 * repeated bool status = 7;
 * @return {!Array<boolean>}
 */
proto.customers.GetCustomersRequest.prototype.getStatusList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 7));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.GetCustomersRequest} returns this
 */
proto.customers.GetCustomersRequest.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.GetCustomersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.GetCustomersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.GetCustomersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.GetCustomersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.customers.CustomerWithPlanInfo.toObject, includeInstance),
    meta: (f = msg.getMeta()) && common_pb.PaginationMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.GetCustomersResponse}
 */
proto.customers.GetCustomersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.GetCustomersResponse;
  return proto.customers.GetCustomersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.GetCustomersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.GetCustomersResponse}
 */
proto.customers.GetCustomersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customers.CustomerWithPlanInfo;
      reader.readMessage(value,proto.customers.CustomerWithPlanInfo.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = new common_pb.PaginationMeta;
      reader.readMessage(value,common_pb.PaginationMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.GetCustomersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.GetCustomersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.GetCustomersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customers.CustomerWithPlanInfo.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.PaginationMeta.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CustomerWithPlanInfo data = 1;
 * @return {!Array<!proto.customers.CustomerWithPlanInfo>}
 */
proto.customers.GetCustomersResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.customers.CustomerWithPlanInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customers.CustomerWithPlanInfo, 1));
};


/**
 * @param {!Array<!proto.customers.CustomerWithPlanInfo>} value
 * @return {!proto.customers.GetCustomersResponse} returns this
*/
proto.customers.GetCustomersResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customers.CustomerWithPlanInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customers.CustomerWithPlanInfo}
 */
proto.customers.GetCustomersResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customers.CustomerWithPlanInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.GetCustomersResponse} returns this
 */
proto.customers.GetCustomersResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional common.PaginationMeta meta = 2;
 * @return {?proto.common.PaginationMeta}
 */
proto.customers.GetCustomersResponse.prototype.getMeta = function() {
  return /** @type{?proto.common.PaginationMeta} */ (
    jspb.Message.getWrapperField(this, common_pb.PaginationMeta, 2));
};


/**
 * @param {?proto.common.PaginationMeta|undefined} value
 * @return {!proto.customers.GetCustomersResponse} returns this
*/
proto.customers.GetCustomersResponse.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.GetCustomersResponse} returns this
 */
proto.customers.GetCustomersResponse.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.GetCustomersResponse.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.CustomerWithPlanInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.CustomerWithPlanInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.CustomerWithPlanInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.CustomerWithPlanInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    username: jspb.Message.getFieldWithDefault(msg, 4, ""),
    subscriptionPlan: jspb.Message.getFieldWithDefault(msg, 5, ""),
    postFupPlan: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 7, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    lastRenewDate: jspb.Message.getFieldWithDefault(msg, 9, ""),
    dataUsage: jspb.Message.getFieldWithDefault(msg, 10, 0),
    dataLimit: jspb.Message.getFieldWithDefault(msg, 11, 0),
    lastActive: (f = msg.getLastActive()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    tenantId: jspb.Message.getFieldWithDefault(msg, 13, ""),
    planName: jspb.Message.getFieldWithDefault(msg, 14, ""),
    businessName: jspb.Message.getFieldWithDefault(msg, 15, ""),
    planId: jspb.Message.getFieldWithDefault(msg, 16, ""),
    businessId: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.CustomerWithPlanInfo}
 */
proto.customers.CustomerWithPlanInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.CustomerWithPlanInfo;
  return proto.customers.CustomerWithPlanInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.CustomerWithPlanInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.CustomerWithPlanInfo}
 */
proto.customers.CustomerWithPlanInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionPlan(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostFupPlan(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastRenewDate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDataUsage(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDataLimit(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastActive(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessName(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanId(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.CustomerWithPlanInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.CustomerWithPlanInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.CustomerWithPlanInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.CustomerWithPlanInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDataUsage();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getDataLimit();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getLastActive();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string subscription_plan = 5;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getSubscriptionPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setSubscriptionPlan = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.clearSubscriptionPlan = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanInfo.prototype.hasSubscriptionPlan = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string post_fup_plan = 6;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getPostFupPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setPostFupPlan = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.clearPostFupPlan = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanInfo.prototype.hasPostFupPlan = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string created_at = 7;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool active = 8;
 * @return {boolean}
 */
proto.customers.CustomerWithPlanInfo.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string last_renew_date = 9;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getLastRenewDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setLastRenewDate = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.clearLastRenewDate = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanInfo.prototype.hasLastRenewDate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 data_usage = 10;
 * @return {number}
 */
proto.customers.CustomerWithPlanInfo.prototype.getDataUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setDataUsage = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 data_limit = 11;
 * @return {number}
 */
proto.customers.CustomerWithPlanInfo.prototype.getDataLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setDataLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp last_active = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.customers.CustomerWithPlanInfo.prototype.getLastActive = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
*/
proto.customers.CustomerWithPlanInfo.prototype.setLastActive = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.clearLastActive = function() {
  return this.setLastActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanInfo.prototype.hasLastActive = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string tenant_id = 13;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string plan_name = 14;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getPlanName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setPlanName = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.clearPlanName = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanInfo.prototype.hasPlanName = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string business_name = 15;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getBusinessName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setBusinessName = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.clearBusinessName = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanInfo.prototype.hasBusinessName = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string plan_id = 16;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getPlanId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setPlanId = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.clearPlanId = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanInfo.prototype.hasPlanId = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string business_id = 17;
 * @return {string}
 */
proto.customers.CustomerWithPlanInfo.prototype.getBusinessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.setBusinessId = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanInfo} returns this
 */
proto.customers.CustomerWithPlanInfo.prototype.clearBusinessId = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanInfo.prototype.hasBusinessId = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subscriptionPlan: jspb.Message.getFieldWithDefault(msg, 4, ""),
    postFupPlan: jspb.Message.getFieldWithDefault(msg, 5, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    lastActive: (f = msg.getLastActive()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    tenantId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    planName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    businessName: jspb.Message.getFieldWithDefault(msg, 14, ""),
    planId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    businessId: jspb.Message.getFieldWithDefault(msg, 16, ""),
    price: jspb.Message.getFieldWithDefault(msg, 17, ""),
    period: jspb.Message.getFieldWithDefault(msg, 18, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.CustomerWithPlanBusinessAndPlanbookInfo;
  return proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionPlan(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostFupPlan(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastActive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessId(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getLastActive();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string subscription_plan = 4;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getSubscriptionPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setSubscriptionPlan = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.clearSubscriptionPlan = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.hasSubscriptionPlan = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string post_fup_plan = 5;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getPostFupPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setPostFupPlan = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.clearPostFupPlan = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.hasPostFupPlan = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool active = 6;
 * @return {boolean}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp last_active = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getLastActive = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
*/
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setLastActive = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.clearLastActive = function() {
  return this.setLastActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.hasLastActive = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string tenant_id = 8;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string plan_name = 9;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getPlanName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setPlanName = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.clearPlanName = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.hasPlanName = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string business_name = 14;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getBusinessName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setBusinessName = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.clearBusinessName = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.hasBusinessName = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string plan_id = 15;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getPlanId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setPlanId = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.clearPlanId = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.hasPlanId = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string business_id = 16;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getBusinessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setBusinessId = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.clearBusinessId = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.hasBusinessId = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string price = 17;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string period = 18;
 * @return {string}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.getPeriod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.setPeriod = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo} returns this
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.clearPeriod = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.prototype.hasPeriod = function() {
  return jspb.Message.getField(this, 18) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.repeatedFields_ = [5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && common_pb.AuthContext.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    search: jspb.Message.getFieldWithDefault(msg, 4, ""),
    planIdsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    businessIdsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    statusList: (f = jspb.Message.getRepeatedBooleanField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest;
  return proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.AuthContext;
      reader.readMessage(value,common_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addPlanIds(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addBusinessIds(value);
      break;
    case 7:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatus(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlanIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getBusinessIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writePackedBool(
      7,
      f
    );
  }
};


/**
 * optional common.AuthContext auth_context = 1;
 * @return {?proto.common.AuthContext}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.common.AuthContext} */ (
    jspb.Message.getWrapperField(this, common_pb.AuthContext, 1));
};


/**
 * @param {?proto.common.AuthContext|undefined} value
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
*/
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.setAuthContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.clearAuthContext = function() {
  return this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string search = 4;
 * @return {string}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.setSearch = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.clearSearch = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.hasSearch = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string plan_ids = 5;
 * @return {!Array<string>}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.getPlanIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.setPlanIdsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.addPlanIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.clearPlanIdsList = function() {
  return this.setPlanIdsList([]);
};


/**
 * repeated string business_ids = 6;
 * @return {!Array<string>}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.getBusinessIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.setBusinessIdsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.addBusinessIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.clearBusinessIdsList = function() {
  return this.setBusinessIdsList([]);
};


/**
 * repeated bool status = 7;
 * @return {!Array<boolean>}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.getStatusList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 7));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoRequest.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.toObject, includeInstance),
    meta: (f = msg.getMeta()) && common_pb.PaginationMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse;
  return proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customers.CustomerWithPlanBusinessAndPlanbookInfo;
      reader.readMessage(value,proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = new common_pb.PaginationMeta;
      reader.readMessage(value,common_pb.PaginationMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customers.CustomerWithPlanBusinessAndPlanbookInfo.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.PaginationMeta.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CustomerWithPlanBusinessAndPlanbookInfo data = 1;
 * @return {!Array<!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo>}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customers.CustomerWithPlanBusinessAndPlanbookInfo, 1));
};


/**
 * @param {!Array<!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo>} value
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse} returns this
*/
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customers.CustomerWithPlanBusinessAndPlanbookInfo}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customers.CustomerWithPlanBusinessAndPlanbookInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional common.PaginationMeta meta = 2;
 * @return {?proto.common.PaginationMeta}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.prototype.getMeta = function() {
  return /** @type{?proto.common.PaginationMeta} */ (
    jspb.Message.getWrapperField(this, common_pb.PaginationMeta, 2));
};


/**
 * @param {?proto.common.PaginationMeta|undefined} value
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse} returns this
*/
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse} returns this
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.GetCustomersWithPlanBusinessAndPlanbookInfoResponse.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.CreateCustomerResponse.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.CreateCustomerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.CreateCustomerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.CreateCustomerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.CreateCustomerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdCustomerList: jspb.Message.toObjectList(msg.getCreatedCustomerList(),
    proto.customers.Customer.toObject, includeInstance),
    createdRadiusUserList: jspb.Message.toObjectList(msg.getCreatedRadiusUserList(),
    radius_pb.RadCheck.toObject, includeInstance),
    planRadGroupsList: jspb.Message.toObjectList(msg.getPlanRadGroupsList(),
    radius_pb.Radusergroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.CreateCustomerResponse}
 */
proto.customers.CreateCustomerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.CreateCustomerResponse;
  return proto.customers.CreateCustomerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.CreateCustomerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.CreateCustomerResponse}
 */
proto.customers.CreateCustomerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customers.Customer;
      reader.readMessage(value,proto.customers.Customer.deserializeBinaryFromReader);
      msg.addCreatedCustomer(value);
      break;
    case 2:
      var value = new radius_pb.RadCheck;
      reader.readMessage(value,radius_pb.RadCheck.deserializeBinaryFromReader);
      msg.addCreatedRadiusUser(value);
      break;
    case 3:
      var value = new radius_pb.Radusergroup;
      reader.readMessage(value,radius_pb.Radusergroup.deserializeBinaryFromReader);
      msg.addPlanRadGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.CreateCustomerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.CreateCustomerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.CreateCustomerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.CreateCustomerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedCustomerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customers.Customer.serializeBinaryToWriter
    );
  }
  f = message.getCreatedRadiusUserList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      radius_pb.RadCheck.serializeBinaryToWriter
    );
  }
  f = message.getPlanRadGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      radius_pb.Radusergroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer created_customer = 1;
 * @return {!Array<!proto.customers.Customer>}
 */
proto.customers.CreateCustomerResponse.prototype.getCreatedCustomerList = function() {
  return /** @type{!Array<!proto.customers.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customers.Customer, 1));
};


/**
 * @param {!Array<!proto.customers.Customer>} value
 * @return {!proto.customers.CreateCustomerResponse} returns this
*/
proto.customers.CreateCustomerResponse.prototype.setCreatedCustomerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customers.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customers.Customer}
 */
proto.customers.CreateCustomerResponse.prototype.addCreatedCustomer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customers.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.CreateCustomerResponse} returns this
 */
proto.customers.CreateCustomerResponse.prototype.clearCreatedCustomerList = function() {
  return this.setCreatedCustomerList([]);
};


/**
 * repeated radius.RadCheck created_radius_user = 2;
 * @return {!Array<!proto.radius.RadCheck>}
 */
proto.customers.CreateCustomerResponse.prototype.getCreatedRadiusUserList = function() {
  return /** @type{!Array<!proto.radius.RadCheck>} */ (
    jspb.Message.getRepeatedWrapperField(this, radius_pb.RadCheck, 2));
};


/**
 * @param {!Array<!proto.radius.RadCheck>} value
 * @return {!proto.customers.CreateCustomerResponse} returns this
*/
proto.customers.CreateCustomerResponse.prototype.setCreatedRadiusUserList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.radius.RadCheck=} opt_value
 * @param {number=} opt_index
 * @return {!proto.radius.RadCheck}
 */
proto.customers.CreateCustomerResponse.prototype.addCreatedRadiusUser = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.radius.RadCheck, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.CreateCustomerResponse} returns this
 */
proto.customers.CreateCustomerResponse.prototype.clearCreatedRadiusUserList = function() {
  return this.setCreatedRadiusUserList([]);
};


/**
 * repeated radius.Radusergroup plan_rad_groups = 3;
 * @return {!Array<!proto.radius.Radusergroup>}
 */
proto.customers.CreateCustomerResponse.prototype.getPlanRadGroupsList = function() {
  return /** @type{!Array<!proto.radius.Radusergroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, radius_pb.Radusergroup, 3));
};


/**
 * @param {!Array<!proto.radius.Radusergroup>} value
 * @return {!proto.customers.CreateCustomerResponse} returns this
*/
proto.customers.CreateCustomerResponse.prototype.setPlanRadGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.radius.Radusergroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.radius.Radusergroup}
 */
proto.customers.CreateCustomerResponse.prototype.addPlanRadGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.radius.Radusergroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.CreateCustomerResponse} returns this
 */
proto.customers.CreateCustomerResponse.prototype.clearPlanRadGroupsList = function() {
  return this.setPlanRadGroupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.UpdateCustomerDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.UpdateCustomerDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.UpdateCustomerDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && common_pb.AuthContext.toObject(includeInstance, f),
    customerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerParams: (f = msg.getCustomerParams()) && proto.customers.UpdateCustomerDetailsRequest.CustomerParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.UpdateCustomerDetailsRequest}
 */
proto.customers.UpdateCustomerDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.UpdateCustomerDetailsRequest;
  return proto.customers.UpdateCustomerDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.UpdateCustomerDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.UpdateCustomerDetailsRequest}
 */
proto.customers.UpdateCustomerDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.AuthContext;
      reader.readMessage(value,common_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    case 3:
      var value = new proto.customers.UpdateCustomerDetailsRequest.CustomerParams;
      reader.readMessage(value,proto.customers.UpdateCustomerDetailsRequest.CustomerParams.deserializeBinaryFromReader);
      msg.setCustomerParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.UpdateCustomerDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.UpdateCustomerDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.UpdateCustomerDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerParams();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.customers.UpdateCustomerDetailsRequest.CustomerParams.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.UpdateCustomerDetailsRequest.CustomerParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.UpdateCustomerDetailsRequest.CustomerParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.UpdateCustomerDetailsRequest.CustomerParams}
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.UpdateCustomerDetailsRequest.CustomerParams;
  return proto.customers.UpdateCustomerDetailsRequest.CustomerParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.UpdateCustomerDetailsRequest.CustomerParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.UpdateCustomerDetailsRequest.CustomerParams}
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.UpdateCustomerDetailsRequest.CustomerParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.UpdateCustomerDetailsRequest.CustomerParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.UpdateCustomerDetailsRequest.CustomerParams} returns this
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.UpdateCustomerDetailsRequest.CustomerParams} returns this
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.UpdateCustomerDetailsRequest.CustomerParams} returns this
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.UpdateCustomerDetailsRequest.CustomerParams} returns this
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.UpdateCustomerDetailsRequest.CustomerParams.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.AuthContext auth_context = 1;
 * @return {?proto.common.AuthContext}
 */
proto.customers.UpdateCustomerDetailsRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.common.AuthContext} */ (
    jspb.Message.getWrapperField(this, common_pb.AuthContext, 1));
};


/**
 * @param {?proto.common.AuthContext|undefined} value
 * @return {!proto.customers.UpdateCustomerDetailsRequest} returns this
*/
proto.customers.UpdateCustomerDetailsRequest.prototype.setAuthContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.UpdateCustomerDetailsRequest} returns this
 */
proto.customers.UpdateCustomerDetailsRequest.prototype.clearAuthContext = function() {
  return this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.UpdateCustomerDetailsRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string customer_id = 2;
 * @return {string}
 */
proto.customers.UpdateCustomerDetailsRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.UpdateCustomerDetailsRequest} returns this
 */
proto.customers.UpdateCustomerDetailsRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CustomerParams customer_params = 3;
 * @return {?proto.customers.UpdateCustomerDetailsRequest.CustomerParams}
 */
proto.customers.UpdateCustomerDetailsRequest.prototype.getCustomerParams = function() {
  return /** @type{?proto.customers.UpdateCustomerDetailsRequest.CustomerParams} */ (
    jspb.Message.getWrapperField(this, proto.customers.UpdateCustomerDetailsRequest.CustomerParams, 3));
};


/**
 * @param {?proto.customers.UpdateCustomerDetailsRequest.CustomerParams|undefined} value
 * @return {!proto.customers.UpdateCustomerDetailsRequest} returns this
*/
proto.customers.UpdateCustomerDetailsRequest.prototype.setCustomerParams = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.UpdateCustomerDetailsRequest} returns this
 */
proto.customers.UpdateCustomerDetailsRequest.prototype.clearCustomerParams = function() {
  return this.setCustomerParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.UpdateCustomerDetailsRequest.prototype.hasCustomerParams = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.UpdateCustomerDetailsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.UpdateCustomerDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.UpdateCustomerDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.UpdateCustomerDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    customersList: jspb.Message.toObjectList(msg.getCustomersList(),
    proto.customers.Customer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.UpdateCustomerDetailsResponse}
 */
proto.customers.UpdateCustomerDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.UpdateCustomerDetailsResponse;
  return proto.customers.UpdateCustomerDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.UpdateCustomerDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.UpdateCustomerDetailsResponse}
 */
proto.customers.UpdateCustomerDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customers.Customer;
      reader.readMessage(value,proto.customers.Customer.deserializeBinaryFromReader);
      msg.addCustomers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.UpdateCustomerDetailsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.UpdateCustomerDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.UpdateCustomerDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customers.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer customers = 1;
 * @return {!Array<!proto.customers.Customer>}
 */
proto.customers.UpdateCustomerDetailsResponse.prototype.getCustomersList = function() {
  return /** @type{!Array<!proto.customers.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customers.Customer, 1));
};


/**
 * @param {!Array<!proto.customers.Customer>} value
 * @return {!proto.customers.UpdateCustomerDetailsResponse} returns this
*/
proto.customers.UpdateCustomerDetailsResponse.prototype.setCustomersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customers.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customers.Customer}
 */
proto.customers.UpdateCustomerDetailsResponse.prototype.addCustomers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customers.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.UpdateCustomerDetailsResponse} returns this
 */
proto.customers.UpdateCustomerDetailsResponse.prototype.clearCustomersList = function() {
  return this.setCustomersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.UpdateCustomerPlanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.UpdateCustomerPlanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.UpdateCustomerPlanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerPlanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && common_pb.AuthContext.toObject(includeInstance, f),
    customerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerParams: (f = msg.getCustomerParams()) && proto.customers.UpdateCustomerPlanRequest.CustomerParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.UpdateCustomerPlanRequest}
 */
proto.customers.UpdateCustomerPlanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.UpdateCustomerPlanRequest;
  return proto.customers.UpdateCustomerPlanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.UpdateCustomerPlanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.UpdateCustomerPlanRequest}
 */
proto.customers.UpdateCustomerPlanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.AuthContext;
      reader.readMessage(value,common_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    case 3:
      var value = new proto.customers.UpdateCustomerPlanRequest.CustomerParams;
      reader.readMessage(value,proto.customers.UpdateCustomerPlanRequest.CustomerParams.deserializeBinaryFromReader);
      msg.setCustomerParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.UpdateCustomerPlanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.UpdateCustomerPlanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.UpdateCustomerPlanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerPlanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerParams();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.customers.UpdateCustomerPlanRequest.CustomerParams.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.UpdateCustomerPlanRequest.CustomerParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.UpdateCustomerPlanRequest.CustomerParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscriptionPlan: jspb.Message.getFieldWithDefault(msg, 1, ""),
    postFupPlan: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.UpdateCustomerPlanRequest.CustomerParams}
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.UpdateCustomerPlanRequest.CustomerParams;
  return proto.customers.UpdateCustomerPlanRequest.CustomerParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.UpdateCustomerPlanRequest.CustomerParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.UpdateCustomerPlanRequest.CustomerParams}
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionPlan(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostFupPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.UpdateCustomerPlanRequest.CustomerParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.UpdateCustomerPlanRequest.CustomerParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string subscription_plan = 1;
 * @return {string}
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.prototype.getSubscriptionPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.UpdateCustomerPlanRequest.CustomerParams} returns this
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.prototype.setSubscriptionPlan = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.UpdateCustomerPlanRequest.CustomerParams} returns this
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.prototype.clearSubscriptionPlan = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.prototype.hasSubscriptionPlan = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string post_fup_plan = 2;
 * @return {string}
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.prototype.getPostFupPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.UpdateCustomerPlanRequest.CustomerParams} returns this
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.prototype.setPostFupPlan = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customers.UpdateCustomerPlanRequest.CustomerParams} returns this
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.prototype.clearPostFupPlan = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.UpdateCustomerPlanRequest.CustomerParams.prototype.hasPostFupPlan = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.AuthContext auth_context = 1;
 * @return {?proto.common.AuthContext}
 */
proto.customers.UpdateCustomerPlanRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.common.AuthContext} */ (
    jspb.Message.getWrapperField(this, common_pb.AuthContext, 1));
};


/**
 * @param {?proto.common.AuthContext|undefined} value
 * @return {!proto.customers.UpdateCustomerPlanRequest} returns this
*/
proto.customers.UpdateCustomerPlanRequest.prototype.setAuthContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.UpdateCustomerPlanRequest} returns this
 */
proto.customers.UpdateCustomerPlanRequest.prototype.clearAuthContext = function() {
  return this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.UpdateCustomerPlanRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string customer_id = 2;
 * @return {string}
 */
proto.customers.UpdateCustomerPlanRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.UpdateCustomerPlanRequest} returns this
 */
proto.customers.UpdateCustomerPlanRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CustomerParams customer_params = 3;
 * @return {?proto.customers.UpdateCustomerPlanRequest.CustomerParams}
 */
proto.customers.UpdateCustomerPlanRequest.prototype.getCustomerParams = function() {
  return /** @type{?proto.customers.UpdateCustomerPlanRequest.CustomerParams} */ (
    jspb.Message.getWrapperField(this, proto.customers.UpdateCustomerPlanRequest.CustomerParams, 3));
};


/**
 * @param {?proto.customers.UpdateCustomerPlanRequest.CustomerParams|undefined} value
 * @return {!proto.customers.UpdateCustomerPlanRequest} returns this
*/
proto.customers.UpdateCustomerPlanRequest.prototype.setCustomerParams = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.UpdateCustomerPlanRequest} returns this
 */
proto.customers.UpdateCustomerPlanRequest.prototype.clearCustomerParams = function() {
  return this.setCustomerParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.UpdateCustomerPlanRequest.prototype.hasCustomerParams = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.UpdateCustomerPlanResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.UpdateCustomerPlanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.UpdateCustomerPlanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.UpdateCustomerPlanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerPlanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatedCustomerList: jspb.Message.toObjectList(msg.getUpdatedCustomerList(),
    proto.customers.Customer.toObject, includeInstance),
    updatedRadusergroupList: jspb.Message.toObjectList(msg.getUpdatedRadusergroupList(),
    radius_pb.Radusergroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.UpdateCustomerPlanResponse}
 */
proto.customers.UpdateCustomerPlanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.UpdateCustomerPlanResponse;
  return proto.customers.UpdateCustomerPlanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.UpdateCustomerPlanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.UpdateCustomerPlanResponse}
 */
proto.customers.UpdateCustomerPlanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customers.Customer;
      reader.readMessage(value,proto.customers.Customer.deserializeBinaryFromReader);
      msg.addUpdatedCustomer(value);
      break;
    case 2:
      var value = new radius_pb.Radusergroup;
      reader.readMessage(value,radius_pb.Radusergroup.deserializeBinaryFromReader);
      msg.addUpdatedRadusergroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.UpdateCustomerPlanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.UpdateCustomerPlanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.UpdateCustomerPlanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.UpdateCustomerPlanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatedCustomerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customers.Customer.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedRadusergroupList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      radius_pb.Radusergroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer updated_customer = 1;
 * @return {!Array<!proto.customers.Customer>}
 */
proto.customers.UpdateCustomerPlanResponse.prototype.getUpdatedCustomerList = function() {
  return /** @type{!Array<!proto.customers.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customers.Customer, 1));
};


/**
 * @param {!Array<!proto.customers.Customer>} value
 * @return {!proto.customers.UpdateCustomerPlanResponse} returns this
*/
proto.customers.UpdateCustomerPlanResponse.prototype.setUpdatedCustomerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customers.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customers.Customer}
 */
proto.customers.UpdateCustomerPlanResponse.prototype.addUpdatedCustomer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customers.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.UpdateCustomerPlanResponse} returns this
 */
proto.customers.UpdateCustomerPlanResponse.prototype.clearUpdatedCustomerList = function() {
  return this.setUpdatedCustomerList([]);
};


/**
 * repeated radius.Radusergroup updated_radusergroup = 2;
 * @return {!Array<!proto.radius.Radusergroup>}
 */
proto.customers.UpdateCustomerPlanResponse.prototype.getUpdatedRadusergroupList = function() {
  return /** @type{!Array<!proto.radius.Radusergroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, radius_pb.Radusergroup, 2));
};


/**
 * @param {!Array<!proto.radius.Radusergroup>} value
 * @return {!proto.customers.UpdateCustomerPlanResponse} returns this
*/
proto.customers.UpdateCustomerPlanResponse.prototype.setUpdatedRadusergroupList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.radius.Radusergroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.radius.Radusergroup}
 */
proto.customers.UpdateCustomerPlanResponse.prototype.addUpdatedRadusergroup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.radius.Radusergroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.UpdateCustomerPlanResponse} returns this
 */
proto.customers.UpdateCustomerPlanResponse.prototype.clearUpdatedRadusergroupList = function() {
  return this.setUpdatedRadusergroupList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.GetCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.GetCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.GetCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && common_pb.AuthContext.toObject(includeInstance, f),
    customerId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.GetCustomerRequest}
 */
proto.customers.GetCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.GetCustomerRequest;
  return proto.customers.GetCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.GetCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.GetCustomerRequest}
 */
proto.customers.GetCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.AuthContext;
      reader.readMessage(value,common_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.GetCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.GetCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.GetCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional common.AuthContext auth_context = 1;
 * @return {?proto.common.AuthContext}
 */
proto.customers.GetCustomerRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.common.AuthContext} */ (
    jspb.Message.getWrapperField(this, common_pb.AuthContext, 1));
};


/**
 * @param {?proto.common.AuthContext|undefined} value
 * @return {!proto.customers.GetCustomerRequest} returns this
*/
proto.customers.GetCustomerRequest.prototype.setAuthContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.GetCustomerRequest} returns this
 */
proto.customers.GetCustomerRequest.prototype.clearAuthContext = function() {
  return this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.GetCustomerRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string customer_id = 2;
 * @return {string}
 */
proto.customers.GetCustomerRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.GetCustomerRequest} returns this
 */
proto.customers.GetCustomerRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.GetCustomerResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.GetCustomerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.GetCustomerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.GetCustomerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    customersList: jspb.Message.toObjectList(msg.getCustomersList(),
    proto.customers.Customer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.GetCustomerResponse}
 */
proto.customers.GetCustomerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.GetCustomerResponse;
  return proto.customers.GetCustomerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.GetCustomerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.GetCustomerResponse}
 */
proto.customers.GetCustomerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customers.Customer;
      reader.readMessage(value,proto.customers.Customer.deserializeBinaryFromReader);
      msg.addCustomers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.GetCustomerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.GetCustomerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.GetCustomerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.GetCustomerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customers.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer customers = 1;
 * @return {!Array<!proto.customers.Customer>}
 */
proto.customers.GetCustomerResponse.prototype.getCustomersList = function() {
  return /** @type{!Array<!proto.customers.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customers.Customer, 1));
};


/**
 * @param {!Array<!proto.customers.Customer>} value
 * @return {!proto.customers.GetCustomerResponse} returns this
*/
proto.customers.GetCustomerResponse.prototype.setCustomersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customers.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customers.Customer}
 */
proto.customers.GetCustomerResponse.prototype.addCustomers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customers.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.GetCustomerResponse} returns this
 */
proto.customers.GetCustomerResponse.prototype.clearCustomersList = function() {
  return this.setCustomersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.AuthRenewOrActivateCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.AuthRenewOrActivateCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.AuthRenewOrActivateCustomerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && common_pb.AuthContext.toObject(includeInstance, f),
    customerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastRenewDate: (f = msg.getLastRenewDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.AuthRenewOrActivateCustomerRequest}
 */
proto.customers.AuthRenewOrActivateCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.AuthRenewOrActivateCustomerRequest;
  return proto.customers.AuthRenewOrActivateCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.AuthRenewOrActivateCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.AuthRenewOrActivateCustomerRequest}
 */
proto.customers.AuthRenewOrActivateCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.AuthContext;
      reader.readMessage(value,common_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastRenewDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.AuthRenewOrActivateCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.AuthRenewOrActivateCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.AuthRenewOrActivateCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastRenewDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.AuthContext auth_context = 1;
 * @return {?proto.common.AuthContext}
 */
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.common.AuthContext} */ (
    jspb.Message.getWrapperField(this, common_pb.AuthContext, 1));
};


/**
 * @param {?proto.common.AuthContext|undefined} value
 * @return {!proto.customers.AuthRenewOrActivateCustomerRequest} returns this
*/
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.setAuthContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.AuthRenewOrActivateCustomerRequest} returns this
 */
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.clearAuthContext = function() {
  return this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string customer_id = 2;
 * @return {string}
 */
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.AuthRenewOrActivateCustomerRequest} returns this
 */
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp last_renew_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.getLastRenewDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.customers.AuthRenewOrActivateCustomerRequest} returns this
*/
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.setLastRenewDate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.AuthRenewOrActivateCustomerRequest} returns this
 */
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.clearLastRenewDate = function() {
  return this.setLastRenewDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.AuthRenewOrActivateCustomerRequest.prototype.hasLastRenewDate = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.AuthRenewOrActivateCustomerResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.AuthRenewOrActivateCustomerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.AuthRenewOrActivateCustomerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.AuthRenewOrActivateCustomerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.AuthRenewOrActivateCustomerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    renewedCustomerList: jspb.Message.toObjectList(msg.getRenewedCustomerList(),
    proto.customers.Customer.toObject, includeInstance),
    renewedRadusergroupsList: jspb.Message.toObjectList(msg.getRenewedRadusergroupsList(),
    radius_pb.Radusergroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.AuthRenewOrActivateCustomerResponse}
 */
proto.customers.AuthRenewOrActivateCustomerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.AuthRenewOrActivateCustomerResponse;
  return proto.customers.AuthRenewOrActivateCustomerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.AuthRenewOrActivateCustomerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.AuthRenewOrActivateCustomerResponse}
 */
proto.customers.AuthRenewOrActivateCustomerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customers.Customer;
      reader.readMessage(value,proto.customers.Customer.deserializeBinaryFromReader);
      msg.addRenewedCustomer(value);
      break;
    case 2:
      var value = new radius_pb.Radusergroup;
      reader.readMessage(value,radius_pb.Radusergroup.deserializeBinaryFromReader);
      msg.addRenewedRadusergroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.AuthRenewOrActivateCustomerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.AuthRenewOrActivateCustomerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.AuthRenewOrActivateCustomerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.AuthRenewOrActivateCustomerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRenewedCustomerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customers.Customer.serializeBinaryToWriter
    );
  }
  f = message.getRenewedRadusergroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      radius_pb.Radusergroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer renewed_customer = 1;
 * @return {!Array<!proto.customers.Customer>}
 */
proto.customers.AuthRenewOrActivateCustomerResponse.prototype.getRenewedCustomerList = function() {
  return /** @type{!Array<!proto.customers.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customers.Customer, 1));
};


/**
 * @param {!Array<!proto.customers.Customer>} value
 * @return {!proto.customers.AuthRenewOrActivateCustomerResponse} returns this
*/
proto.customers.AuthRenewOrActivateCustomerResponse.prototype.setRenewedCustomerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customers.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customers.Customer}
 */
proto.customers.AuthRenewOrActivateCustomerResponse.prototype.addRenewedCustomer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customers.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.AuthRenewOrActivateCustomerResponse} returns this
 */
proto.customers.AuthRenewOrActivateCustomerResponse.prototype.clearRenewedCustomerList = function() {
  return this.setRenewedCustomerList([]);
};


/**
 * repeated radius.Radusergroup renewed_radusergroups = 2;
 * @return {!Array<!proto.radius.Radusergroup>}
 */
proto.customers.AuthRenewOrActivateCustomerResponse.prototype.getRenewedRadusergroupsList = function() {
  return /** @type{!Array<!proto.radius.Radusergroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, radius_pb.Radusergroup, 2));
};


/**
 * @param {!Array<!proto.radius.Radusergroup>} value
 * @return {!proto.customers.AuthRenewOrActivateCustomerResponse} returns this
*/
proto.customers.AuthRenewOrActivateCustomerResponse.prototype.setRenewedRadusergroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.radius.Radusergroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.radius.Radusergroup}
 */
proto.customers.AuthRenewOrActivateCustomerResponse.prototype.addRenewedRadusergroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.radius.Radusergroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.AuthRenewOrActivateCustomerResponse} returns this
 */
proto.customers.AuthRenewOrActivateCustomerResponse.prototype.clearRenewedRadusergroupsList = function() {
  return this.setRenewedRadusergroupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.SysRenewOrActivateCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.SysRenewOrActivateCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.SysRenewOrActivateCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.SysRenewOrActivateCustomerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lastRenewDate: (f = msg.getLastRenewDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.SysRenewOrActivateCustomerRequest}
 */
proto.customers.SysRenewOrActivateCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.SysRenewOrActivateCustomerRequest;
  return proto.customers.SysRenewOrActivateCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.SysRenewOrActivateCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.SysRenewOrActivateCustomerRequest}
 */
proto.customers.SysRenewOrActivateCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastRenewDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.SysRenewOrActivateCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.SysRenewOrActivateCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.SysRenewOrActivateCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.SysRenewOrActivateCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastRenewDate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string customer_id = 1;
 * @return {string}
 */
proto.customers.SysRenewOrActivateCustomerRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.SysRenewOrActivateCustomerRequest} returns this
 */
proto.customers.SysRenewOrActivateCustomerRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp last_renew_date = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.customers.SysRenewOrActivateCustomerRequest.prototype.getLastRenewDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.customers.SysRenewOrActivateCustomerRequest} returns this
*/
proto.customers.SysRenewOrActivateCustomerRequest.prototype.setLastRenewDate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.SysRenewOrActivateCustomerRequest} returns this
 */
proto.customers.SysRenewOrActivateCustomerRequest.prototype.clearLastRenewDate = function() {
  return this.setLastRenewDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.SysRenewOrActivateCustomerRequest.prototype.hasLastRenewDate = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.SysRenewOrActivateCustomerResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.SysRenewOrActivateCustomerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.SysRenewOrActivateCustomerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.SysRenewOrActivateCustomerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.SysRenewOrActivateCustomerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    renewedCustomerList: jspb.Message.toObjectList(msg.getRenewedCustomerList(),
    proto.customers.Customer.toObject, includeInstance),
    renewedRadusergroupsList: jspb.Message.toObjectList(msg.getRenewedRadusergroupsList(),
    radius_pb.Radusergroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.SysRenewOrActivateCustomerResponse}
 */
proto.customers.SysRenewOrActivateCustomerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.SysRenewOrActivateCustomerResponse;
  return proto.customers.SysRenewOrActivateCustomerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.SysRenewOrActivateCustomerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.SysRenewOrActivateCustomerResponse}
 */
proto.customers.SysRenewOrActivateCustomerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customers.Customer;
      reader.readMessage(value,proto.customers.Customer.deserializeBinaryFromReader);
      msg.addRenewedCustomer(value);
      break;
    case 2:
      var value = new radius_pb.Radusergroup;
      reader.readMessage(value,radius_pb.Radusergroup.deserializeBinaryFromReader);
      msg.addRenewedRadusergroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.SysRenewOrActivateCustomerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.SysRenewOrActivateCustomerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.SysRenewOrActivateCustomerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.SysRenewOrActivateCustomerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRenewedCustomerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customers.Customer.serializeBinaryToWriter
    );
  }
  f = message.getRenewedRadusergroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      radius_pb.Radusergroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer renewed_customer = 1;
 * @return {!Array<!proto.customers.Customer>}
 */
proto.customers.SysRenewOrActivateCustomerResponse.prototype.getRenewedCustomerList = function() {
  return /** @type{!Array<!proto.customers.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customers.Customer, 1));
};


/**
 * @param {!Array<!proto.customers.Customer>} value
 * @return {!proto.customers.SysRenewOrActivateCustomerResponse} returns this
*/
proto.customers.SysRenewOrActivateCustomerResponse.prototype.setRenewedCustomerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customers.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customers.Customer}
 */
proto.customers.SysRenewOrActivateCustomerResponse.prototype.addRenewedCustomer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customers.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.SysRenewOrActivateCustomerResponse} returns this
 */
proto.customers.SysRenewOrActivateCustomerResponse.prototype.clearRenewedCustomerList = function() {
  return this.setRenewedCustomerList([]);
};


/**
 * repeated radius.Radusergroup renewed_radusergroups = 2;
 * @return {!Array<!proto.radius.Radusergroup>}
 */
proto.customers.SysRenewOrActivateCustomerResponse.prototype.getRenewedRadusergroupsList = function() {
  return /** @type{!Array<!proto.radius.Radusergroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, radius_pb.Radusergroup, 2));
};


/**
 * @param {!Array<!proto.radius.Radusergroup>} value
 * @return {!proto.customers.SysRenewOrActivateCustomerResponse} returns this
*/
proto.customers.SysRenewOrActivateCustomerResponse.prototype.setRenewedRadusergroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.radius.Radusergroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.radius.Radusergroup}
 */
proto.customers.SysRenewOrActivateCustomerResponse.prototype.addRenewedRadusergroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.radius.Radusergroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.SysRenewOrActivateCustomerResponse} returns this
 */
proto.customers.SysRenewOrActivateCustomerResponse.prototype.clearRenewedRadusergroupsList = function() {
  return this.setRenewedRadusergroupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.AuthDeactivateCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.AuthDeactivateCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.AuthDeactivateCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.AuthDeactivateCustomerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authContext: (f = msg.getAuthContext()) && common_pb.AuthContext.toObject(includeInstance, f),
    customerId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.AuthDeactivateCustomerRequest}
 */
proto.customers.AuthDeactivateCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.AuthDeactivateCustomerRequest;
  return proto.customers.AuthDeactivateCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.AuthDeactivateCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.AuthDeactivateCustomerRequest}
 */
proto.customers.AuthDeactivateCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.AuthContext;
      reader.readMessage(value,common_pb.AuthContext.deserializeBinaryFromReader);
      msg.setAuthContext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.AuthDeactivateCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.AuthDeactivateCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.AuthDeactivateCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.AuthDeactivateCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.AuthContext.serializeBinaryToWriter
    );
  }
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional common.AuthContext auth_context = 1;
 * @return {?proto.common.AuthContext}
 */
proto.customers.AuthDeactivateCustomerRequest.prototype.getAuthContext = function() {
  return /** @type{?proto.common.AuthContext} */ (
    jspb.Message.getWrapperField(this, common_pb.AuthContext, 1));
};


/**
 * @param {?proto.common.AuthContext|undefined} value
 * @return {!proto.customers.AuthDeactivateCustomerRequest} returns this
*/
proto.customers.AuthDeactivateCustomerRequest.prototype.setAuthContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customers.AuthDeactivateCustomerRequest} returns this
 */
proto.customers.AuthDeactivateCustomerRequest.prototype.clearAuthContext = function() {
  return this.setAuthContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customers.AuthDeactivateCustomerRequest.prototype.hasAuthContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string customer_id = 2;
 * @return {string}
 */
proto.customers.AuthDeactivateCustomerRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.AuthDeactivateCustomerRequest} returns this
 */
proto.customers.AuthDeactivateCustomerRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.AuthDeactivateCustomerResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.AuthDeactivateCustomerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.AuthDeactivateCustomerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.AuthDeactivateCustomerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.AuthDeactivateCustomerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deactivatedCustomerList: jspb.Message.toObjectList(msg.getDeactivatedCustomerList(),
    proto.customers.Customer.toObject, includeInstance),
    deactivatedRadusergroupsList: jspb.Message.toObjectList(msg.getDeactivatedRadusergroupsList(),
    radius_pb.Radusergroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.AuthDeactivateCustomerResponse}
 */
proto.customers.AuthDeactivateCustomerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.AuthDeactivateCustomerResponse;
  return proto.customers.AuthDeactivateCustomerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.AuthDeactivateCustomerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.AuthDeactivateCustomerResponse}
 */
proto.customers.AuthDeactivateCustomerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customers.Customer;
      reader.readMessage(value,proto.customers.Customer.deserializeBinaryFromReader);
      msg.addDeactivatedCustomer(value);
      break;
    case 2:
      var value = new radius_pb.Radusergroup;
      reader.readMessage(value,radius_pb.Radusergroup.deserializeBinaryFromReader);
      msg.addDeactivatedRadusergroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.AuthDeactivateCustomerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.AuthDeactivateCustomerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.AuthDeactivateCustomerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.AuthDeactivateCustomerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeactivatedCustomerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customers.Customer.serializeBinaryToWriter
    );
  }
  f = message.getDeactivatedRadusergroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      radius_pb.Radusergroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer deactivated_customer = 1;
 * @return {!Array<!proto.customers.Customer>}
 */
proto.customers.AuthDeactivateCustomerResponse.prototype.getDeactivatedCustomerList = function() {
  return /** @type{!Array<!proto.customers.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customers.Customer, 1));
};


/**
 * @param {!Array<!proto.customers.Customer>} value
 * @return {!proto.customers.AuthDeactivateCustomerResponse} returns this
*/
proto.customers.AuthDeactivateCustomerResponse.prototype.setDeactivatedCustomerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customers.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customers.Customer}
 */
proto.customers.AuthDeactivateCustomerResponse.prototype.addDeactivatedCustomer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customers.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.AuthDeactivateCustomerResponse} returns this
 */
proto.customers.AuthDeactivateCustomerResponse.prototype.clearDeactivatedCustomerList = function() {
  return this.setDeactivatedCustomerList([]);
};


/**
 * repeated radius.Radusergroup deactivated_radusergroups = 2;
 * @return {!Array<!proto.radius.Radusergroup>}
 */
proto.customers.AuthDeactivateCustomerResponse.prototype.getDeactivatedRadusergroupsList = function() {
  return /** @type{!Array<!proto.radius.Radusergroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, radius_pb.Radusergroup, 2));
};


/**
 * @param {!Array<!proto.radius.Radusergroup>} value
 * @return {!proto.customers.AuthDeactivateCustomerResponse} returns this
*/
proto.customers.AuthDeactivateCustomerResponse.prototype.setDeactivatedRadusergroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.radius.Radusergroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.radius.Radusergroup}
 */
proto.customers.AuthDeactivateCustomerResponse.prototype.addDeactivatedRadusergroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.radius.Radusergroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.AuthDeactivateCustomerResponse} returns this
 */
proto.customers.AuthDeactivateCustomerResponse.prototype.clearDeactivatedRadusergroupsList = function() {
  return this.setDeactivatedRadusergroupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.SysDeactivateCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.SysDeactivateCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.SysDeactivateCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.SysDeactivateCustomerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.SysDeactivateCustomerRequest}
 */
proto.customers.SysDeactivateCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.SysDeactivateCustomerRequest;
  return proto.customers.SysDeactivateCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.SysDeactivateCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.SysDeactivateCustomerRequest}
 */
proto.customers.SysDeactivateCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.SysDeactivateCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.SysDeactivateCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.SysDeactivateCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.SysDeactivateCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string customer_id = 1;
 * @return {string}
 */
proto.customers.SysDeactivateCustomerRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customers.SysDeactivateCustomerRequest} returns this
 */
proto.customers.SysDeactivateCustomerRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customers.SysDeactivateCustomerResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customers.SysDeactivateCustomerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customers.SysDeactivateCustomerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customers.SysDeactivateCustomerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.SysDeactivateCustomerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deactivatedCustomerList: jspb.Message.toObjectList(msg.getDeactivatedCustomerList(),
    proto.customers.Customer.toObject, includeInstance),
    deactivatedRadusergroupsList: jspb.Message.toObjectList(msg.getDeactivatedRadusergroupsList(),
    radius_pb.Radusergroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customers.SysDeactivateCustomerResponse}
 */
proto.customers.SysDeactivateCustomerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customers.SysDeactivateCustomerResponse;
  return proto.customers.SysDeactivateCustomerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customers.SysDeactivateCustomerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customers.SysDeactivateCustomerResponse}
 */
proto.customers.SysDeactivateCustomerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customers.Customer;
      reader.readMessage(value,proto.customers.Customer.deserializeBinaryFromReader);
      msg.addDeactivatedCustomer(value);
      break;
    case 2:
      var value = new radius_pb.Radusergroup;
      reader.readMessage(value,radius_pb.Radusergroup.deserializeBinaryFromReader);
      msg.addDeactivatedRadusergroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customers.SysDeactivateCustomerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customers.SysDeactivateCustomerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customers.SysDeactivateCustomerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customers.SysDeactivateCustomerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeactivatedCustomerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customers.Customer.serializeBinaryToWriter
    );
  }
  f = message.getDeactivatedRadusergroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      radius_pb.Radusergroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer deactivated_customer = 1;
 * @return {!Array<!proto.customers.Customer>}
 */
proto.customers.SysDeactivateCustomerResponse.prototype.getDeactivatedCustomerList = function() {
  return /** @type{!Array<!proto.customers.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customers.Customer, 1));
};


/**
 * @param {!Array<!proto.customers.Customer>} value
 * @return {!proto.customers.SysDeactivateCustomerResponse} returns this
*/
proto.customers.SysDeactivateCustomerResponse.prototype.setDeactivatedCustomerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customers.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customers.Customer}
 */
proto.customers.SysDeactivateCustomerResponse.prototype.addDeactivatedCustomer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customers.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.SysDeactivateCustomerResponse} returns this
 */
proto.customers.SysDeactivateCustomerResponse.prototype.clearDeactivatedCustomerList = function() {
  return this.setDeactivatedCustomerList([]);
};


/**
 * repeated radius.Radusergroup deactivated_radusergroups = 2;
 * @return {!Array<!proto.radius.Radusergroup>}
 */
proto.customers.SysDeactivateCustomerResponse.prototype.getDeactivatedRadusergroupsList = function() {
  return /** @type{!Array<!proto.radius.Radusergroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, radius_pb.Radusergroup, 2));
};


/**
 * @param {!Array<!proto.radius.Radusergroup>} value
 * @return {!proto.customers.SysDeactivateCustomerResponse} returns this
*/
proto.customers.SysDeactivateCustomerResponse.prototype.setDeactivatedRadusergroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.radius.Radusergroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.radius.Radusergroup}
 */
proto.customers.SysDeactivateCustomerResponse.prototype.addDeactivatedRadusergroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.radius.Radusergroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customers.SysDeactivateCustomerResponse} returns this
 */
proto.customers.SysDeactivateCustomerResponse.prototype.clearDeactivatedRadusergroupsList = function() {
  return this.setDeactivatedRadusergroupsList([]);
};


goog.object.extend(exports, proto.customers);
